"""legacy

Revision ID: 0447a53e7d20
Revises:
Create Date: 2022-11-05 14:20:57.758954

"""
import subprocess
import sys

import sqlalchemy as sa
import sqlalchemy_utils as sau
from alembic import op

# revision identifiers, used by Alembic.
revision = "0447a53e7d20"
down_revision = None
branch_labels = None
depends_on = None


def pip_install(*pkgs):
    ret = subprocess.call([sys.executable, "-m", "pip", "install", *pkgs])
    if ret:
        raise RuntimeError(f"pip install returned status code {ret}")


def fix_passlib():
    """Fix passlib issues due to sqlalchemy_utils

    While passlib isn't needed anymore, incremental migrations requires it to
    be installed.
    """
    # pyright: reportMissingModuleSource=false
    try:
        import passlib
    except ImportError:
        pip_install("passlib")
        import passlib
        from passlib.context import LazyCryptContext

        sau.types.password.LazyCryptContext = LazyCryptContext
        sau.types.password.passlib = passlib


def upgrade() -> None:
    fix_passlib()
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "secret_sanity",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("secret", sau.types.password.PasswordType(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sau.types.uuid.UUIDType(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("address", sau.types.ip_address.IPAddressType(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "uploads",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("hash", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("upload_time", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("hash"),
    )
    op.create_table(
        "textures",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("upload_id", sa.Integer(), nullable=True),
        sa.Column("tex_type", sa.String(), nullable=False),
        sa.Column("meta", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["upload_id"],
            ["uploads.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("textures")
    op.drop_table("uploads")
    op.drop_table("users")
    op.drop_table("secret_sanity")
    # ### end Alembic commands ###
